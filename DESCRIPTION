Package: diversityForest
Type: Package
Title: Innovative Complex Split Procedures in Random Forests Through
        Candidate Split Sampling
Version: 0.5.0
Date: 2024-09-16
Authors@R: c(person("Roman", "Hornung", role = c("aut", "cre"),
                     email = "hornung@ibe.med.uni-muenchen.de"),
              person("Marvin N.", "Wright", role = c("ctb", "cph")))
Maintainer: Roman Hornung <hornung@ibe.med.uni-muenchen.de>
Description: Implementations of three diversity forest (DF) (Hornung, 2022, 
  <doi:10.1007/s42979-021-00920-1>) variants. 
  The DF algorithm is a split-finding approach that allows complex split procedures to 
  be realized in random forest variants.
  The three DF variants implemented are:
    1. interaction forests (IFs) (Hornung & Boulesteix, 2022, <doi:10.1016/j.csda.2022.107460>): 
    Model quantitative and qualitative interaction effects using bivariable splitting. 
    Come with the Effect Importance Measure (EIM), which can be used to identify variable 
    pairs that have well-interpretable quantitative and qualitative interaction effects 
    with high predictive relevance.
    2. multi forests (MuFs) (Hornung & Hapfelmeier, 2024, <doi:10.48550/arXiv.2409.08925>): 
	Model multi-class outcomes using multi-way and binary splitting. Come with two 
	variable importance measures (VIMs): The multi-class VIM measures the degree to which 
	the variables are specifically associated with one or more outcome classes, and the 
	discriminatory VIM, similar to conventional VIMs, measures the overall influence 
	strength of the variables.
    3. the basic form of diversity forests that uses conventional univariable, binary 
    splitting (Hornung, 2022).
  Except for multi forests, which are tailored for multi-class outcomes, all included 
  diversity forest variants support categorical, metric, and survival outcomes.
  The package also includes plotting functions that make it possible to learn about the 
  forms of the effects identified using IFs and MuFs.
  This is a fork of the R package 'ranger' (main author: Marvin N. Wright), which 
  implements random forests using an efficient C++ implementation.
SystemRequirements: C++17
Encoding: UTF-8
License: GPL-3
Imports: Rcpp (>= 0.11.2), Matrix, ggplot2, ggpubr, scales, nnet,
        sgeostat, rms, MapGAM, gam, rlang, grDevices, RColorBrewer,
        RcppEigen, survival, patchwork
LinkingTo: Rcpp, RcppEigen
Depends: R (>= 3.5)
Suggests: testthat, BOLTSSIRR
Additional_repositories: https://romanhornung.github.io/drat
RoxygenNote: 7.3.1
NeedsCompilation: yes
Packaged: 2024-09-16 12:44:03 UTC; hornung
Author: Roman Hornung [aut, cre],
  Marvin N. Wright [ctb, cph]
Repository: CRAN
Date/Publication: 2024-09-16 15:00:08 UTC
